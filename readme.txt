I. Что это
Это комплект утилит на Питоне, предназначенный для создания локальной копии любого дневника на diary.ru .

-- Целевой формат: набор файлов markdown (.md)
-- Открывается при помощи Obsidian, кроссплатформенно
-- Парсятся все теги
-- Устанавливаются внутренние ссылки
-- Генерируются:
---- Полный список постов (сортировка по дате), 
---- Календарь как на diary.ru,
---- Полный список тегов,
---- В файле каждого тега имеется список постов, где он проставлен
-- Можно скачать все картинки, при этом качаются как картинки в тексте, так и картинки, на которые приведены только гиперссылки
-- Только под Windows: можно время создания файлов постов поставить равным времени создания самих постов
-- Можно всё это добавить в гит-репозиторий, хотя это уже не входит в набор скриптов

II. Требования
-- Питон 3.x
-- Модули согласно requirements.txt
-- Место на диске. Для моего дневника надо чуть больше 200 мб на локальную копию, если делать её самим, и ещё столько же, если будете хранить в репозитории. Это с картинками. Без картинок -- около 12 мб.
-- Поставить Obsidian (https://obsidian.md/)
-- Если вы плохи в командной строке, то поставить Visual Studio Code.
-- Мозги. Знать Питон не требуется, однако модули придётся как-то ставить, а настройки менять.

III. Порядок настройки

Эти действия делаются только один раз.

1. Создать рабочую папку, допустим, c:\diary
2. Создать папки c:\diary\scripts
3. Распаковать или сделать чекаут данного репозитория в c:\diary\scripts\
4. Настроить settings.py:
a. diary_url : замените ник на свой
b. diary_url_mode : 0 при дампе всего дневника, 1 -- при дампе по тегу (используется, если надо обновить только некоторые посты, чтобы не скачивать с нуля весь дневник)
c. download_pics : Это влияет не на то, скачиваются картинки или нет, а на то, заменяются ли их ссылки на внутренние. Если True, то заменяются, и вам надо для отображения картинок запустить в нужный момент download_pics.py. Если False, то запускать не нужно, будут внешние ссылки.
d. link_marks : замените 00 на последние буквы своего ника или на ник целиком. Я использовал 00 чтобы не было проблем со строчными и прописными буквами.
e. cross_link_chechking : замените ник на свой. У меня по два варианта, т.к. есть два написания.
f. saved_cookies : если у вас открытый дневник, можете оставить пустым. Если дневник закрытый, то залогиньтесь и заберите соответствующие значения из кукисов в настройках браузера.
g. start, stop : старт, обычно, 20. Стоп -- это смещение последней страницы+20 (наведите внизу дневника мышку на неё и посмотрите, что там в rfrom). Если вы дампаете по тегу, то старт надо задать 1, а стоп надо задать как последнюю страницу+1. Если вы дампаете последние страницы, чтобы получилось обновление, то в качестве старта надо указать смещение последней страницы или чуть раньше.
h. base_folder : папка, в которой будут непосредственно лежать файлы постов. Запишите тут zhz_diary_obsidian или иное название папки
i. forbidden_pic_urls: укажите подстроки, которые должны быть исключены из списка картинок для скачивания. Для своего дневника я уже указал правильно. Для вашего могут понадобиться другие адреса, это вы выясните после изучения первого полного дампа.

При первом запуске скриптов будет создано необходимое дерево папок. Привожу его ниже с комментарием, где что лежит:

c:\diary\zhz_diary_obsidian <- тут будут сами посты в формате .md
c:\diary\zhz_diary_obsidian\pics <- тут будут картинки
c:\diary\zhz_diary_obsidian\indexes <- тут будет список постов, канедарь и список тегов
c:\diary\zhz_diary_obsidian\indexes\days <- тут будут вспомогательные файлы для календаря; если в какой-либо день создано несколько постов, то для этого дня генерируется отдельный список, который будет размещён в этой папке
c:\diary\zhz_diary_obsidian\tags <- тут будут лежать файлы с тегами, и со списками постов по каждому тегу
c:\diary\scripts <- сюда сложить питоновские файлы
c:\diary\dump <- тут будут метаданные постов и "сырые" посты в формате html

IV. Работа с настроенными скриптами

1. Запускаете download.py . Он забивает папку dump файлами постов в формате html.

Папку dump можно не очищать между запусками, но файлы перезаписываются. Если вы отредактировали старые посты на сайте, то можно запустить скрипт только с нужными страницами или нужным тегом, чтобы не качать весь дневник с нуля. Файлы обновятся автоматически.

Между страницами делается пауза в 1 минуту, чтобы не нагружать сервер. В связи с этим скачивание может затянуться в зависимости от размера дневника. У меня оно занимает несколько часов.

2. Заходите в папку zhz_diary_obsidian, или как вы её назвали, и удаляете все файлы кроме папок pics, .obsidian и .git, если она есть. Файлы в этой папке не перезаписываются, а создаются с новым именем, если файл уже существует, поэтому необходимо чистить папку.
3. Запускаете markdown_all_diary.py . Она берёт посты из папки dump, преобразует, и суёт в папку zhz_diary_obsidian, уже в формате .md. Также она создаёт список перекрёстных ссылок и список картинок для загрузки.
4. Запустить replace_urls.py, чтобы установить перекрёстные ссылки и сделать ссылки на изображения внутренними.
5. Запустить download_pics.py, чтобы скачать картинки. Если вы в настройках указали, что скачивать не нужно, то запускать тоже не нужно. Первое скачивание может быть длительным, много часов, поскольку у меня установлена пауза в 1 минуту между картинками. На моём дневнике скачивание занимает больше суток. При повторных запусках, если вы картинки не удаляли, повторно они не скачиваются. Скачиваются только новые.
6. Запустить create_indexes.py, чтобы создать календарь, полный список записей, список тегов, а также списки записей по каждому тегу
7. Если вы работаете под windows, то можете запустить скрипт update_times.py, чтобы даты создания постов совпадали с датами создания файлов. При этом следует учесть, что на каждый тег создаётся отдельный файл, и этот файл будет содержать дату создания на момент запуска файла markdown_all_diary.py , таким образом, самыми новыми всегда будут являться файлы с тегами.

После этого можно открывать папку zhz_diary_obsidian при помощи Obsidian и использовать все его функции!

V. Известные проблемы.
-- В форматировании не поддерживаются спойлер, выравнивание, атрибуты rowspan, colspan у таблиц.
-- Первая запись может пропадать. Это связано с тем, что дайари не всегда её выдаёт.
-- Ссылки, содержащие в тексте <a ...>названия</a> специальные символы: []^|# могут обрабатываться неправильно. Об этом выдаётся предупреждение, надо проверять.

VI. Авторство
Скрипты написаны мной, zHz (zHz00). Электронная почта для связи: zHz00@rambler.ru
Файлы распространяются по лицензии MIT, привожу ниже её текст.

Copyright (c) 2022 zHz

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.